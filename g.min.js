!function (e) { var t; e = window || document.window, function () { if ("undefined" != typeof window) return this; if ("undefined" == typeof window && "undefined" == typeof document) throw new Error("g.js require a interactive document") }(), window.Width = window.innerWidth, window.Height = window.innerHeight, window.onresize = (() => { window.Width = window.innerWidth, window.Height = window.innerHeight }), document.GetElement = ((e, t) => g.Selector(e, t)), e.g = { DefineNames: function (e) { if ("boolean" == typeof e) { if ("undefined" != typeof document) { for (var n = {}, i = 0; i < document.getElementsByTagName("*").length; i++) { var o = document.getElementsByTagName("*")[i]; null !== o.getAttribute("g-name") && void 0 !== o.getAttribute("g-name") && (n[o.getAttribute("g-name")] = o) } for (t in n) window[t] = n[t] } } else console.log("The argument has to be a boolean") }, Help: function (e) { if (void 0 !== e && "selector" == e.toLowerCase()) { var t = new XMLHttpRequest; t.onreadystatechange = function () { if (4 === t.readyState && (200 === t.status || 0 == t.status)) { var e = t.responseText; console.log(e) } }, t.open("GET", "g_help/g_selector.txt", !0), t.send(null), t.onloadend = function () { if (404 == t.status) throw "Something wrong happened" } } }, Highlight: function (e, t, n) { if ("" != n && null != n || (n = 4e3), "" != t && null != t || (t = !0), "string" == typeof e) { if (e.indexOf(".") > -1) { for (var i = e.substring(e.indexOf(".") + 1), o = 0; o < document.body.getElementsByClassName(i).length; o++)document.getElementsByClassName(i)[o].classList.add("gx-highlight"); "boolean" == typeof t && 1 == t && setTimeout(function () { for (var e = 0; e < document.body.getElementsByClassName(i).length; e++)document.getElementsByClassName(i)[e].classList.remove("gx-highlight") }, n) } if (e.indexOf("#") > -1) { i = e.substring(e.indexOf("#") + 1); document.getElementById(i).classList.add("gx-highlight"), "boolean" == typeof t && 1 == t && setTimeout(function () { document.getElementById(i).classList.remove("gx-highlight") }, n) } if (e.indexOf("<") > -1 && e.indexOf(">") > -1) { for (i = e.substring(e.indexOf("<") + 1, e.indexOf(">")), o = 0; o < document.body.getElementsByTagName(i).length; o++)document.getElementsByTagName(i)[o].classList.add("gx-highlight"); "boolean" == typeof t && 1 == t && setTimeout(function () { for (var e = 0; e < document.body.getElementsByTagName(i).length; e++)document.getElementsByTagName(i)[e].classList.remove("gx-highlight"), null != document.getElementsByTagName(i)[e].getAttribute("class") && "" != document.getElementsByTagName(i)[e].getAttribute("class") || document.getElementsByTagName(i)[e].removeAttribute("class") }, n) } } "object" == typeof e && (e.classList.add("gx-highlight"), "boolean" == typeof t && 1 == t && setTimeout(function () { e.classList.remove("gx-highlight") }, n)) }, All: function (e) { var t, n, i; if (void 0 === e) throw "Uncaught TypeError: Failed to execute 'All' on 'Document': 1 argument required, but only 0 present"; { if (n = new Array, "." == e.substring(0, 1)) { t = e.substring(e.indexOf(".") + 1); for (var o = 0; o < document.getElementsByClassName(t).length; o++)n.push(document.getElementsByClassName(t)[o]); return s(n) } if ("#" == e.substring(0, 1)) { t = e.substring(e.indexOf("#") + 1); for (o = 0; o < document.body.getElementsByTagName("*").length; o++)(i = document.body.getElementsByTagName("*")[o]).getAttribute("id") == t && n.push(i); return s(n) } if ("<" == e.substring(0, 1) && e.indexOf(">") > -1) { t = e.substring(e.indexOf("<") + 1, e.indexOf(">")); for (o = 0; o < document.getElementsByTagName(t).length; o++)n.push(document.getElementsByTagName(t)[o]); return s(n) } function s(e) { if (0 !== e.length) return e.Random = (() => e[Math.floor(Math.random() * e.length)]), e.Css = ((t, n) => { if (void 0 !== t && void 0 !== n) for (var i = 0; i < e.length; i++)e[i].style.setProperty(t, n) }), e.SetAttribute = ((t, n) => { if (void 0 !== t && void 0 !== n) for (var i = 0; i < e.length; i++)e[i].setAttribute(t, n) }), e.RemoveAttribute = (t => { if (void 0 !== t) for (var n = 0; n < e.length; n++)e[n].removeAttribute(t) }), e.Attribute = (t => { var n; if (void 0 !== t) if ("." == t.substring(0, 1)) { n = t.substring(1); for (var i = 0; i < e.length; i++)e[i].className = n } else if ("#" == t.substring(0, 1)) { n = t.substring(1); for (i = 0; i < e.length; i++)e[i].setAttribute("id", n) } }), e } } }, Selector(e, t) { if ("string" == typeof e) { if (void 0 === e && "" === e) return "Can not find a undefined element"; if (e.indexOf(" ") > -1 && e.indexOf("in") > -1) { null != t && "" != t || (t = 0); var n, i, o, s, r, d, a = e.split(" "), l = a[0]; if (void 0 !== (n = a[2]) && ("." == n.substring(0, 1) && (i = document.getElementsByClassName(n.substring(1))[0]), "#" == n.substring(0, 1) && (i = document.getElementById(n.substring(1))), "<" == n.substring(0, 1) && ">" == n.substring(n.length - 1, n.length) && (d = n.substring(n.indexOf("<") + 1, n.indexOf(">")), i = document.getElementsByTagName(d)[0])), void 0 !== l && void 0 !== i) { if ("." == l.substring(0, 1)) for (var u = 0; u < i.getElementsByClassName(l.substring(1)).length; u++)if (void 0 !== i.getElementsByClassName(l.substring(1))[u] && void 0 !== (r = i.getElementsByClassName(l.substring(1))[t])) return g(o = r); if ("<" == l.substring(0, 1) && ">" == l.substring(l.length - 1, l.length)) { s = l.substring(l.indexOf("<") + 1, l.indexOf(">")); for (u = 0; u < i.getElementsByTagName(s).length; u++)if (void 0 !== i.getElementsByTagName(s)[u] && void 0 !== (r = i.getElementsByTagName(s)[t])) return g(o = r) } } } else { if (null != t && "" != t || (t = 0), e.indexOf(".") > -1) return l = e.substring(e.indexOf(".") + 1), n = document.getElementsByClassName(l)[t], g(o = n); if (e.indexOf("#") > -1) return l = e.substring(e.indexOf("#") + 1), n = document.getElementById(l), g(o = n); if (e.indexOf("<") > -1 && e.indexOf(">") > -1) return l = e.substring(e.indexOf("<") + 1, e.indexOf(">")), n = document.getElementsByTagName(l)[t], g(o = n); if (e.indexOf("@") > -1) return l = e.substring(e.indexOf("@") + 1), n = document.getElementsByName(l)[t], g(o = n) } } else if ("object" == typeof e) return e; function g(e) { return void 0 !== o && (e.On = function (e, t) { void 0 !== o && void 0 !== e && ("string" == typeof e && o.addEventListener(e, t), "object" == typeof e && o.addEventListener(e, t)) }, e.Css = function (e, t) { void 0 !== o && void 0 !== e && void 0 !== t && o.style.setProperty(e, t) }, e.Width = function (e) { if (void 0 !== e) o.style.width = e; else if (null == e) return o.clientWidth }, e.Height = function (e) { if (void 0 !== e) o.style.height = e; else if (null == e) return o.clientHeight }, e.Class = (e => { if (void 0 !== e) o.className = e; else if (null == e) return o.className }), e.Style = (e => { if (void 0 === e) return null == o.style ? o.style : getComputedStyle(o); for (l in e) o.style[l] = e[l] }), e.Click = (e => { void 0 !== e ? o.onclick = e : o.click() })), e } }, Define: function (e, t) { if (void 0 !== e && void 0 !== t) { if ("all" != e) return window[t] = e, window[t]; for (var n = 0; n < document.getElementsByTagName("*").length; n++)null !== document.getElementsByTagName("*")[n].getAttribute("class") && (console.log(!0), window[document.getElementsByTagName("*")[n].getAttribute("class")] = document.getElementsByTagName("*")[n]) } }, XHLoad: function (e, t) { var n; (n = new XMLHttpRequest).addEventListener("readystatechange", function () { 4 === this.readyState && (200 == this.status && void 0 !== t && t(response = { text: this.responseText, code: this.status, main: this }), 200 !== this.status && void 0 !== t && t(response = { text: this.status, code: this.status, main: this.status })) }), n.onerror = function () { console.error("An error has occurred") }, n.open("GET", e, !0), n.send(null) }, CreateElement: function (e, t) { var n, i, o, s, r, d; if (void 0 !== e && "" !== e) { if (e.indexOf(".") > -1 && -1 == e.indexOf("#")) { for (i in o = [], n = e.split(".")) o.push(n[i]); return 2 == o.length && (s = o[0], r = o[1]), (d = document.createElement(s)).className = r, a(d) } if (e.indexOf("#") > -1 && -1 == e.indexOf(".")) { for (i in o = [], n = e.split("#")) o.push(n[i]); return 2 == o.length && (s = o[0], r = o[1]), (d = document.createElement(s)).id = r, a(d) } if (-1 == e.indexOf("#") && -1 == e.indexOf(".")) return a(d = document.createElement(e)) } function a(e) { var n; return e.Style = (t => { if (void 0 !== t) for (n in t) e.style[n] = t[n] }), e.On = ((t, n) => { void 0 !== t && void 0 !== n && (e.addEventListener(t, n), []) }), e.Text = (t => { return void 0 !== t && "" !== t ? (e.innerText = t, t) : e.innerText }), void 0 !== t && (void 0 !== g.Selector ? g.Selector(t).appendChild(e) : console.error("Couldn't create element!")), e } }, JSON: function (e, t) { var n, i; "json" == (i = e.split("."))[i.length - 1] && ((n = new XMLHttpRequest).addEventListener("readystatechange", function () { 4 == this.readyState && (200 == this.status || 0 == this.status ? (this.responseText, void 0 !== t && t(response = { parse: JSON.parse(this.responseText), string: JSON.stringify(this.responseText) })) : (console.error("Failed to load " + e), console.error("Request responded with status: " + this.status))) }), n.open("GET", e, !0), n.send(null)) }, ScrollListener: function (e, t, n) { var i, o; if (void 0 !== e) if ("object" == typeof e) { if (null !== e && void 0 !== t) { if ("direction" == t) { var s = window.pageYOffset; e.addEventListener("scroll", function (e) { var t = window.pageYOffset; s > t ? "function" == typeof n && n(dir = { top: !0, bottom: !1 }) : "function" == typeof n && n(dir = { top: !1, bottom: !0 }), s = t }) } "trigger" == t.substring(0, 7) && (s = t.substring(8), void 0 !== (i = parseFloat(s) || parseInt(s)) && NaN !== i && e.addEventListener("scroll", function (t) { (o = e.scrollTop || e.pageYOffset) > i && "function" == typeof n && n(triggered = !0), o < i && "function" == typeof n && n(triggered = !1) })) } } else console.error("The first argument has to be a object!") } }, e.Colors = { RED: "#ff0000", ORANGE: "#ff6600", YELLOW: "#ffff00", GREEN: "#008000", BLUE: "#0000ff", INDIGO: "#4b0082", VIOLET: "#7f00ff", BLACK: "#000000", WHITE: "#ffffff", RANDOM: function () { return "rgb(" + Math.floor(255 * Math.random()) + ", " + Math.floor(255 * Math.random()) + ", " + Math.floor(255 * Math.random()) + ")" } }, g.Canvas = class { constructor() { this.width = void 0, this.height = void 0, this.documentElement = void 0, this.id = void 0 } SetCanvas(e) { var t, n, i; if ("full" == this.height && (this.height = window.innerHeight), "full" == this.width && (this.width = window.innerWidth), (t = document.createElement("canvas")).width = this.width, t.height = this.height, void 0 !== this.id) t.setAttribute("name", this.id); else { n = "abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ", navigator.userAgent.split(" "), i = ""; for (var o = 0; o < 22; o++)i += n.charAt(Math.floor(Math.random() * n.length)); this.id = i, t.setAttribute("unique-id", i) } this.documentElement = t, g.Selector(e).appendChild(t), t = null, this.ctx = this.documentElement.getContext("2d") } DrawLine(e) { var t, n; if ("object" == typeof e) { for (n in t = { NewPath: !0, StartX: void 0, StartY: void 0, EndX: void 0, EndY: void 0, LineColor: "black", LineWidth: 1, LineCap: void 0 }, e) t[n] = e[n]; return 1 == t.NewPath && (this.ctx.beginPath(), this.ctx.strokeStyle = t.LineColor, this.ctx.lineCap = t.LineCap, this.ctx.lineWidth = t.LineWidth, this.ctx.moveTo(t.StartX, t.StartY), this.ctx.lineTo(t.EndX, t.EndY), this.ctx.stroke(), this.ctx.closePath()), { On: (e, t) => { } } } console.error("You need to enter a object as argument") } } }(window);